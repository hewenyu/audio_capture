name: Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_call:

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.11','3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-toolchain
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel build numpy cmake
        
    - name: Build C++ library
      shell: msys2 {0}
      run: |
        cd c/windows
        mkdir -p build
        cd build
        cmake .. -G "MinGW Makefiles"
        cmake --build . --config Release
        
    - name: Build Python wheel
      shell: msys2 {0}
      run: |
        # Use the modified setup.py to build the wheel with DLLs included
        "${pythonLocation}/python.exe" bindings/python/setup.py bdist_wheel

    - name: List files in dist directory
      run: ls dist

    # - name: Test wheel installation
    #   run: |
    #     cd bindings/python
    #     pip install --force-reinstall dist/*.whl
    #     python -c "import audio_capture; print('Audio Capture module loaded successfully')"
        
    - name: Upload wheel artifact
      uses: actions/upload-artifact@v4
      with:
        name: audio_capture-win-py${{ matrix.python-version }}
        path: dist/*.whl

        
  release:
    needs: [windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
     
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Display structure of downloaded files
      run: ls -R artifacts
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v0.1.15
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: |
          artifacts/**/*.whl
        body: |
          ## Windows Wheels
          - Python 3.11, 3.12 wheels for Windows (64-bit)
          
          ## Installation
          ```
          pip install audio_capture==${{ steps.get_version.outputs.VERSION }}
          ```
          
          Or download and install the appropriate wheel file for your platform and Python version.